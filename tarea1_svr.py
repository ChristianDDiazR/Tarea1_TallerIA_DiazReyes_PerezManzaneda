# -*- coding: utf-8 -*-
"""Tarea1_SVR

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JoFNApbQUwpMy3w0tLeJXYCW5yJs_B9B
"""

#Paso 1: importar librearias necesarias
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVR
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# Cargar datos
data = fetch_california_housing(as_frame=True)
df = data.frame
df.head()

# Variables independientes y dependiente
X = df.drop("MedHouseVal", axis=1)
y = df["MedHouseVal"]

# Dividir en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Escalar variables
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Opci√≥n A: ENTRENAMIENTO COMPLETO
svr = SVR(kernel='rbf', C=100, epsilon=0.1)
svr.fit(X_train_scaled, y_train)
y_pred = svr.predict(X_test_scaled)

def evaluar_modelo(y_true, y_pred, nombre="SVR"):
    rmse = np.sqrt(mean_squared_error(y_true, y_pred))
    mae = mean_absolute_error(y_true, y_pred)
    r2 = r2_score(y_true, y_pred)

    print(f"--- {nombre} ---")
    print(f"RMSE: {rmse:.3f}")
    print(f"MAE:  {mae:.3f}")
    print(f"R^2:  {r2:.3f}")

evaluar_modelo(y_test, y_pred, "SVR")