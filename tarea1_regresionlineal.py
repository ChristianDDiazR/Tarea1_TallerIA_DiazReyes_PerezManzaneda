# -*- coding: utf-8 -*-
"""Tarea1_RegresionLineal

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oUhhZWP-NCTL3ooL29vkOwh3uZMEiMZo
"""

#Paso 1: importar librearias necesarias
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.neural_network import MLPRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

#Pasp 2: Cargar el dataset
data = fetch_california_housing(as_frame=True)
df = data.frame
df.head()

#Paso 3: Preparación de los datos
X = df.drop("MedHouseVal", axis=1)
y = df["MedHouseVal"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

#Paso 4: Crear y entrenar el modelo
lr = LinearRegression()
lr.fit(X_train_scaled, y_train)
y_pred_lr = lr.predict(X_test_scaled)

#Paso 5: Evaluar el modelo
def evaluar_modelo(y_true, y_pred, nombre):
    rmse = np.sqrt(mean_squared_error(y_true, y_pred))
    mae = mean_absolute_error(y_true, y_pred)
    r2 = r2_score(y_true, y_pred)
    print(f"--- {nombre} ---")
    print(f"RMSE: {rmse:.3f}")
    print(f"MAE: {mae:.3f}")
    print(f"R^2: {r2:.3f}")
    print()

evaluar_modelo(y_test, y_pred_lr, "Regresión Lineal")